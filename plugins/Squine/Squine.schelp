CLASS:: Squine
SUMMARY:: Sine-saw-square-pulse morphing oscillator
CATEGORIES:: UGens>Generators>Deterministic

DESCRIPTION::

Bandlimited very clean oscillator  morphing between sine, saw-like, square and pulse waveforms.

Smooth shape (no ripples), so useful as LFO as well as audio source.
The waveform morphing extends the palette of FM setups.

The waveform has no sharp corners. The emphasis::iminsweep:: argument controls minimum length of pulse/square high/low flips.
Due this minimum sweep length, the waveform "degrades" to sinewave at higher frequencies, so no aliasing of higher square/saw tones.

Hardsync is a very fast pulse-like sweep, but also bandlimited.

strong::Guarantee::: If freq, clip and skew are generated by sinewave or Squine, the output is bandlimited
in virtually all configurations, including high index FM setups.

CLASSMETHODS::

METHOD::ar

argument::freq
Frequency in Herz

argument::clip
Squareness of waveform. Range 0.0-1.0

argument::skew
Left-right symmetry of waveform. Range -1.0 to +1.0
list::
## +/-1 with clip=0 is saw left or right.
## +/-1 with clip=1 is pulse up or down.
::

argument::sync
Hardsync signal. When >= 1.0, resync waveform, by very fast sweep to phase 0.
Sync signal is output 1 time per cycle.

argument::mul
Output will be multiplied by this value.

argument::add
This value will be added to the output.

argument::iminsweep
Minimum length in samples of square/pulse sine sweeps.
Range: 4 to 100.

Default value 0 gets a random value range 5-15.
This is useful because the spectrum of this waveform has quieter bands,
you avoid emphasizing these when using several squinewaves in chorus.


argument::initphase
Initialize to a part of waveform. Useful for some LFO applications.

Phase is a symbolic value range 0-2, where
list::
##	0.0 = top of curve, before downsweep
##	0.5 = after downsweep, before possible flat segment
##	1.0 = before upsweep
##	1.5 = after upsweep, before possible flat segment
##	2.0 = 0.0, top of curve, after flat segment
::

Default initphase value 1.25 is mid upsweep at zero crossing, like a standard sine/squarewave.


EXAMPLES::

code::

// Sinewave
{ Squine.ar(220, 0, 0) }.play;

// Squarewave sweeping to pulse
{ Squine.ar(220, 1, Line.kr(0, 1, 10)) }.scope;

// Morphing waveform
{ Squine.ar(220, SinOsc.kr(0.2), SinOsc.kr(1.3, 0.5, 0.5)) }.scope;

// Hardsync rising over 20 secs
{ Squine.ar(100, SinOsc.kr(0.3, 0, 0.2, 0.5), 1, Impulse.ar(XLine.kr(5, 500, 20), 0.5, 2))}.scope;

// FM patch
(
{ Pan2.ar(
	Squine.ar(
		Squine.ar(15, SinOsc.ar(0.3, 0, 0.5, 0.5),
			Line.ar(-1, 1, 20), 0, 200, 300), 
		SinOsc.ar(0.3, 0, 0.5, 0.5), SinOsc.ar(1.1), 0, 1, 0, 4),
	0, 0.7) }.scope;
)

::
